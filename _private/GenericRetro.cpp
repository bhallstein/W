/*
 * W - a tiny 2D game development library
 *
 * ====================
 *  GenericRetro.cpp
 * ====================
 *
 * Copyright (C) 2012 - Ben Hallstein - http://ben.am
 * Published under the MIT license: http://opensource.org/licenses/MIT
 *
 */

#include "GenericRetro.h"

std::map<char,std::vector<W::fRect>> W::GenericRetro {
  {
    'a',
    {
      {{0,0},{10,2}},
      {{0,2},{2,8}},
      {{2,4},{6,2}},
      {{8,2},{2,8}},
    },
  },
  {
    'b',
    {
      {{0,0},{2,10}},
      {{2,0},{6,2}},
      {{2,4},{6,2}},
      {{2,8},{6,2}},
      {{8,2},{2,8}},
    },
  },
  {
    'c',
    {
      {{0,0},{2,10}},
      {{2,0},{7,2}},
      {{2,8},{7,2}},
    },
  },
  {
    'd',
    {
      {{0,0},{2,10}},
      {{8,2},{2,8}},
      {{2,0},{6,2}},
      {{2,8},{6,2}},
    },
  },
  {
    'e',
    {
      {{0,0},{2,10}},
      {{2,0},{7,2}},
      {{2,4},{5,2}},
      {{2,8},{7,2}},
    },
  },
  {
    'f',
    {
      {{0,0},{2,10}},
      {{2,0},{7,2}},
      {{2,4},{5,2}},
    },
  },
  {
    'g',
    {
      {{0,0},{2,10}},
      {{2,0},{8,2}},
      {{2,8},{8,2}},
      {{8,4},{2,4}},
    },
  },
  {
    'h',
    {
      {{0,0},{2,10}},
      {{8,0},{2,10}},
      {{2,4},{6,2}},
    },
  },
  {
    'i',
    {
      {{2,0},{2,10}},
    },
  },
  {
    'j',
    {
      {{6,9},{2,10}},
      {{0,8},{6,2}},
    },
  },
  {
    'k',
    {
      {{0,0},{2,10}},
      {{2,4},{5,2}},
      {{7,0},{2,4}},
      {{7,6},{2,4}},
    },
  },
  {
    'l',
    {
      {{0,0},{2,10}},
      {{2,8},{6,2}},
    },
  },
  {
    'm',
    {
      {{0,0},{2,10}},
      {{2,2},{2,2}},
      {{4,4},{2,2}},
      {{6,2},{2,2}},
      {{8,0},{2,10}},
    },
  },
  {
    'n',
    {
      {{0,0},{2,10}},
      {{2,2},{2,2}},
      {{4,4},{2,2}},
      {{6,6},{2,2}},
      {{8,0},{2,10}},
    },
  },
  {
    'o',
    {
      {{0,0},{2,10}},
      {{8,0},{2,10}},
      {{2,0},{6,2}},
      {{2,8},{6,2}},
    },
  },
  {
    'p',
    {
      {{0,0},{2,10}},
      {{2,0},{6,2}},
      {{2,4},{6,2}},
      {{8,0},{2,6}},
    },
  },
  {
    'q',
    {
      {{0,0},{2,10}},
      {{8,0},{2,10}},
      {{2,0},{6,2}},
      {{2,8},{6,2}},
      {{6,10},{2,2}},
    },
  },
  {
    'r',
    {
      {{0,0},{2,10}},
      {{2,0},{6,2}},
      {{2,4},{6,2}},
      {{8,0},{2,6}},
      {{6,6},{2,2}},
      {{8,8},{2,2}},
    },
  },
  {
    's',
    {
      {{0,0},{10,2}},
      {{0,4},{10,2}},
      {{0,8},{10,2}},
      {{0,2},{2,2}},
      {{8,6},{2,2}},
    },
  },
  {
    't',
    {
      {{0,0},{10,2}},
      {{4,2},{2,8}},
    },
  },
  {
    'u',
    {
      {{0,0},{2,10}},
      {{8,0},{2,10}},
      {{2,8},{6,2}},
    },
  },
  {
    'v',
    {
      {{0,0},{2,6}},
      {{2,6},{2,2}},
      {{4,8},{2,2}},
      {{6,6},{2,2}},
      {{8,0},{2,6}},
    },
  },
  {
    'w',
    {
      {{0,0},{2,8}},
      {{4,0},{2,8}},
      {{8,0},{2,8}},
      {{2,8},{2,2}},
      {{6,8},{2,2}},
    },
  },
  {
    'x',
    {
      {{0,0},{2,2}},
      {{2,2},{2,2}},
      {{4,4},{2,2}},
      {{6,6},{2,2}},
      {{8,8},{2,2}},
      {{8,0},{2,2}},
      {{6,2},{2,2}},
      {{2,6},{2,2}},
      {{0,8},{2,2}},
    },
  },
  {
    'y',
    {
      {{8,0},{2,10}},
      {{0,0},{2,2}},
      {{2,2},{2,2}},
      {{4,4},{4,2}},
    },
  },
  {
    'z',
    {
      {{0,0},{10,2}},
      {{0,8},{10,2}},
      {{6,2},{2,2}},
      {{4,4},{2,2}},
      {{2,6},{2,2}},
    },
  },
  {
    '0',
    {
      {{4,4},{2,2}},
      {{0,0},{2,10}},
      {{8,0},{2,10}},
      {{2,0},{6,2}},
      {{2,8},{6,2}},
    },
  },
  {
    '1',
    {
      {{0,0},{2,2}},
      {{2,0},{2,10}},
    },
  },
  {
    '2',
    {
      {{0,0},{2,4}},
      {{2,0},{8,2}},
      {{8,2},{2,2}},
      {{2,4},{8,2}},
      {{0,6},{2,4}},
      {{2,8},{8,2}},
    },
  },
  {
    '3',
    {
      {{8,0},{2,10}},
      {{0,0},{8,2}},
      {{0,8},{8,2}},
      {{2,4},{6,2}},
    },
  },
  {
    '4',
    {
      {{8,0},{2,10}},
      {{0,0},{2,4}},
      {{0,4},{8,2}},
    },
  },
  {
    '5',
    {
      {{0,0},{10,2}},
      {{0,4},{10,2}},
      {{0,8},{10,2}},
      {{0,2},{2,2}},
      {{8,6},{2,2}},
    },
  },
  {
    '6',
    {
      {{0,0},{2,10}},
      {{2,0},{8,2}},
      {{2,4},{8,2}},
      {{2,8},{8,2}},
      {{8,6},{2,2}},
    },
  },
  {
    '7',
    {
        {{0,0},{10,2}},
        {{8,2},{2,2}},
        {{6,4},{2,2}},
        {{4,6},{2,2}},
        {{2,8},{2,2}},
    },
  },
  {
    '8',
    {
      {{0,0},{2,10}},
      {{8,0},{2,10}},
      {{2,0},{6,2}},
      {{2,4},{6,2}},
      {{2,8},{6,2}},
    },
  },
  {
    '9',
    {
      {{8,0},{2,10}},
      {{0,0},{8,2}},
      {{0,4},{8,2}},
      {{0,2},{2,2}},
      {{0,8},{8,2}},
    },
  },
  {
    '$',  // Actually Â£
    {
      {{4,0},{6,2}},
      {{2,2},{2,2}},
      {{0,4},{8,2}},
      {{2,6},{2,4}},
      {{0,8},{10,2}},
      ////  v->push_back(iRect(v2i(x+0, y+0, 10, 2, ),v2i()));, 0); //  $
      ////  v->push_back(iRect(v2i(x+0, y+4, 10, 2, ),v2i()));, 0);
      ////  v->push_back(iRect(v2i(x+0, y+8, 10, 2, ),v2i()));, 0);
      ////  v->push_back(iRect(v2i(x+0, y+2, 2, 2, ),v2i()));, 0);
      ////  v->push_back(iRect(v2i(x+8, y+6, 2, 2, ),v2i()));, 0);
      ////  v->push_back(iRect(v2i(x+4, y-1, 2, 12, ),v2i()));, 0);
    }
  },
  {
    ':',
    {
      {{2,4},{2,2}},
      {{2,8},{2,2}},
    },
  },
  {
    '!',
    {
      {{2,0},{2, 6}},
      {{2,8},{2, 2}},
    },
  },
  {
    '.',
    {
      {{2,8},{2,2}},
    }
  },
  {
    '\'',
    {
      {{2,0},{2,2}},
      {{3,2},{2,2}},
    },
  },
};
